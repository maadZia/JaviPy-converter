// type
VOID: 'void';
INT: 'int';
FLOAT: 'float';
STRING: 'String';
BOOLEAN: 'boolean';

// keyword
CLASS: 'class';
PUBLIC: 'public';
PRIVATE: 'private';
PROTECTED: 'protected';
STATIC: 'static';
NEW: 'new';
FOR: 'for';
IF: 'if';
ELSE: 'else';
WHILE: 'while';
BREAK: 'break';
SWITCH: 'switch';
CASE: 'case';
DEFAULT: 'default';
CONTINUE: 'continue';
RETURN: 'return';
TRY: 'try';
CATCH: 'catch';
IMPORT: 'import';
PRINT: 'System.out.print';
PRINTLN: 'System.out.println';

// operator
PLUS: '+';
MINUS: '-';
MULTIPLY: '*';
DIVIDE: '/';
MODULO: '%';
ASSIGN: '=';
EQUAL: '==';
NOTEQUAL: '!=';
LESSTHAN: '<';
LESSOREQ: '<=';
MORETHAN: '>';
MOREOREQ: '>=';
OR: '||';
AND: '&&';
NOT: '!';
INCREMENT: '++';
DECREMENT: '--';

// delimiter
SEMICOLON: ';';
COLON: ':';
LEFTPAREN: '(';
RIGHTPAREN: ')';
LEFTBRACKET: '[';
RIGHTBRACKET: ']';
LEFTBRACE: '{';
RIGHTBRACE: '}';
COMMA: ',';
DOT: '.';

// literal
NUMBER: '-'? ( '0' | [1-9][0-9]* ) ( '.' [0-9]+ )?;
TEXT: '"' (.*?) '"';
THIS: 'this';
NULL: 'null';
TRUE: 'true';
FALSE: 'false';
IDENTIFIER: [a-zA-Z_][a-zA-Z0-9_]*;

COMMENT: ('//' ~('\n' | '\r')* '\n'?  | '/*' .*? '*/') -> skip;
WHITESPACE: [ \t\r\n]+ -> skip;
